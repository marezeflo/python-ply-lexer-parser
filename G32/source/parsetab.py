
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'rightCOMArightHACERENTONCESPUNTO_Y_COMArightIDENTIFICADORPROCESOAMBIENTESIMIENTRASREPETIRPARAHASTAleftCONJUNCIONDISYUNCIONrightASIGNACIONrightIGUALleftDISTINTOleftMENORMENOR_IGUALMAYORMAYOR_IGUALleftSUMARESTAleftMULTIPLICACIONDIVISIONDIVISION_ENTERArightMODULOPOTENCIAleftPARENTESIS_IZQUIERDAPARENTESIS_DERECHAACCION AMBIENTE ASIGNACION CADENA COMA COMENTARIO_BLOQUE COMENTARIO_ENCABEZADO COMENTARIO_LINEA CONJUNCION DATO DISTINTO DISYUNCION DIVISION DIVISION_ENTERA DOS_PUNTOS ENTONCES ES ESCRIBIR FIN_ACCION FIN_FUNCION FIN_MIENTRAS FIN_PARA FIN_PROCEDIMIENTO FIN_SEGUN FIN_SI FUNCION HACER HASTA HASTA_QUE IDENTIFICADOR IGUAL LEER MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MIENTRAS MODULO MULTIPLICACION NEGACION NUMERO_ENTERO NUMERO_REAL PARA PARENTESIS_DERECHA PARENTESIS_IZQUIERDA POTENCIA PROCEDIMIENTO PROCESO PUNTO_Y_COMA REPETIR RESTA SALTO_DE_LINEA SEGUN SEGUN_DEFECTO SI SINO SUMA\n    sigma : program\n  \n    program : ACCION IDENTIFICADOR ES environment process FIN_ACCION\n            | comment ACCION IDENTIFICADOR ES environment process FIN_ACCION\n            | ACCION IDENTIFICADOR ES process FIN_ACCION\n            | comment ACCION IDENTIFICADOR ES process FIN_ACCION\n  \n    process : PROCESO sentence\n    process : PROCESO\n  \n    comment : COMENTARIO_ENCABEZADO\n            | COMENTARIO_BLOQUE\n            | COMENTARIO_LINEA\n  \n    environment : AMBIENTE environmentsentence\n    environment : AMBIENTE\n  \n    environmentsentence : IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA environmentsentence\n                        | comment IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA environmentsentence\n                        | IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA\n                        | comment IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA\n                        | IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA environmentsentence\n                        | comment IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA environmentsentence\n                        | IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA environmentsentence\n                        | comment IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA environmentsentence\n                        | IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA\n                        | comment IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA\n                        | IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA\n                        | comment IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA\n                        | IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA environmentsentence\n                        | comment IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA environmentsentence\n                        | IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA\n                        | comment IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA\n                        | IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA environmentsentence\n                        | comment IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA environmentsentence\n                        | IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA\n                        | comment IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA                        \n                        | function PUNTO_Y_COMA environmentsentence\n                        | comment function PUNTO_Y_COMA environmentsentence\n                        | function PUNTO_Y_COMA\n                        | comment function PUNTO_Y_COMA\n                        | procedure PUNTO_Y_COMA environmentsentence\n                        | comment procedure PUNTO_Y_COMA environmentsentence\n                        | procedure PUNTO_Y_COMA\n                        | comment procedure PUNTO_Y_COMA\n\n  \n  type  : DATO\n  \n  function  : FUNCION IDENTIFICADOR PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA DOS_PUNTOS type ES environment process FIN_FUNCION PUNTO_Y_COMA\n            | FUNCION IDENTIFICADOR PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA DOS_PUNTOS type ES process FIN_FUNCION PUNTO_Y_COMA\n\n  \n  procedure : PROCEDIMIENTO PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA ES environment process FIN_PROCEDIMIENTO PUNTO_Y_COMA\n            | PROCEDIMIENTO PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA ES process FIN_PROCEDIMIENTO PUNTO_Y_COMA\n\n  \n  sentence  : write PUNTO_Y_COMA sentence\n            | comment write PUNTO_Y_COMA sentence\n            | write PUNTO_Y_COMA\n            | comment write PUNTO_Y_COMA\n            | read PUNTO_Y_COMA sentence\n            | comment read PUNTO_Y_COMA sentence\n            | read PUNTO_Y_COMA\n            | comment read PUNTO_Y_COMA\n            | while PUNTO_Y_COMA sentence\n            | comment while PUNTO_Y_COMA sentence\n            | while PUNTO_Y_COMA\n            | comment while PUNTO_Y_COMA\n            | for PUNTO_Y_COMA sentence\n            | comment for PUNTO_Y_COMA sentence\n            | for PUNTO_Y_COMA\n            | comment for PUNTO_Y_COMA\n            | if PUNTO_Y_COMA sentence\n            | comment if PUNTO_Y_COMA sentence\n            | if PUNTO_Y_COMA\n            | comment if PUNTO_Y_COMA\n            | case PUNTO_Y_COMA sentence\n            | comment case PUNTO_Y_COMA sentence\n            | case PUNTO_Y_COMA\n            | comment case PUNTO_Y_COMA\n            | repeat PUNTO_Y_COMA sentence\n            | comment repeat PUNTO_Y_COMA sentence\n            | repeat PUNTO_Y_COMA\n            | comment repeat PUNTO_Y_COMA\n            | assign PUNTO_Y_COMA sentence\n            | comment assign PUNTO_Y_COMA sentence\n            | assign PUNTO_Y_COMA\n            | comment assign PUNTO_Y_COMA\n\n  \n  write : ESCRIBIR PARENTESIS_IZQUIERDA string PARENTESIS_DERECHA PUNTO_Y_COMA\n\n  \n  read  : LEER PARENTESIS_IZQUIERDA var PARENTESIS_DERECHA \n\n  \n  while : MIENTRAS condition HACER sentence FIN_MIENTRAS\n\n  \n  for : PARA PARENTESIS_IZQUIERDA IDENTIFICADOR ASIGNACION NUMERO_ENTERO PARENTESIS_DERECHA HASTA NUMERO_ENTERO COMA IDENTIFICADOR ASIGNACION IDENTIFICADOR SUMA NUMERO_ENTERO HACER sentence FIN_PARA\n      | PARA PARENTESIS_IZQUIERDA IDENTIFICADOR ASIGNACION NUMERO_ENTERO PARENTESIS_DERECHA HASTA NUMERO_ENTERO HACER sentence FIN_PARA\n  \n  if  : SI condition ENTONCES sentence FIN_SI\n      | SI condition ENTONCES sentence SINO sentence FIN_SI\n  \n  case  : SEGUN PARENTESIS_IZQUIERDA IDENTIFICADOR PARENTESIS_DERECHA HACER casesentence FIN_SEGUN\n  \n  casesentence  : IGUAL NUMERO_ENTERO DOS_PUNTOS sentence PUNTO_Y_COMA casesentence\n                | IGUAL NUMERO_ENTERO DOS_PUNTOS sentence PUNTO_Y_COMA\n                | IGUAL NUMERO_ENTERO DOS_PUNTOS sentence PUNTO_Y_COMA default\n                | IGUAL NUMERO_REAL DOS_PUNTOS sentence PUNTO_Y_COMA casesentence\n                | IGUAL NUMERO_REAL DOS_PUNTOS sentence PUNTO_Y_COMA \n                | IGUAL NUMERO_REAL DOS_PUNTOS sentence PUNTO_Y_COMA default\n                | IGUAL IDENTIFICADOR DOS_PUNTOS sentence PUNTO_Y_COMA casesentence\n                | IGUAL IDENTIFICADOR DOS_PUNTOS sentence PUNTO_Y_COMA\n                | IGUAL IDENTIFICADOR DOS_PUNTOS sentence PUNTO_Y_COMA default\n  \n  default : SEGUN_DEFECTO DOS_PUNTOS sentence PUNTO_Y_COMA\n  \n  repeat  : REPETIR sentence HASTA_QUE condition\n  \n  assign  : IDENTIFICADOR ASIGNACION operation\n          | IDENTIFICADOR ASIGNACION CADENA\n  \n  operation : PARENTESIS_IZQUIERDA operation PARENTESIS_DERECHA\n            | operated aop operated aop operation\n            | operated aop operated\n            | operated\n  \n  operated  : IDENTIFICADOR\n            | NUMERO_REAL\n            | NUMERO_ENTERO\n  \n  arguments : IDENTIFICADOR DOS_PUNTOS type COMA arguments\n            | IDENTIFICADOR DOS_PUNTOS type\n  \n  string  : var COMA string\n          | var\n          | CADENA COMA string\n          | CADENA\n  \n  var : IDENTIFICADOR COMA var\n      | IDENTIFICADOR\n  \n  condition : PARENTESIS_IZQUIERDA IDENTIFICADOR rop IDENTIFICADOR PARENTESIS_DERECHA \n            | NEGACION PARENTESIS_IZQUIERDA IDENTIFICADOR rop IDENTIFICADOR PARENTESIS_DERECHA \n            | PARENTESIS_IZQUIERDA CADENA rop CADENA PARENTESIS_DERECHA \n            | NEGACION PARENTESIS_IZQUIERDA CADENA rop CADENA PARENTESIS_DERECHA \n            | PARENTESIS_IZQUIERDA NUMERO_ENTERO rop NUMERO_ENTERO PARENTESIS_DERECHA \n            | NEGACION PARENTESIS_IZQUIERDA NUMERO_ENTERO rop NUMERO_ENTERO PARENTESIS_DERECHA \n            | PARENTESIS_IZQUIERDA NUMERO_REAL rop NUMERO_REAL PARENTESIS_DERECHA \n            | NEGACION PARENTESIS_IZQUIERDA NUMERO_REAL rop NUMERO_REAL PARENTESIS_DERECHA \n            | condition lop condition\n  \n  aop : SUMA\n\t\t  | RESTA\n\t\t  | MULTIPLICACION\n\t\t  | DIVISION\n\t\t  | MODULO\n\t\t  | DIVISION_ENTERA\n\t\t  | POTENCIA\n  \n  lop : CONJUNCION\n      | DISYUNCION\n  \n  rop : IGUAL\n\t\t  | MAYOR\n\t\t  | MENOR\n\t\t  | MAYOR_IGUAL\n\t\t  | MENOR_IGUAL\n\t\t  | DISTINTO\n  '
    
_lr_action_items = {'ACCION':([0,4,5,6,7,],[3,9,-8,-9,-10,]),'COMENTARIO_ENCABEZADO':([0,14,15,43,52,53,56,65,66,67,68,69,70,71,92,93,100,101,102,103,104,105,106,107,120,137,141,142,143,144,145,203,204,205,206,207,228,271,272,273,278,302,307,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'COMENTARIO_BLOQUE':([0,14,15,43,52,53,56,65,66,67,68,69,70,71,92,93,100,101,102,103,104,105,106,107,120,137,141,142,143,144,145,203,204,205,206,207,228,271,272,273,278,302,307,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'COMENTARIO_LINEA':([0,14,15,43,52,53,56,65,66,67,68,69,70,71,92,93,100,101,102,103,104,105,106,107,120,137,141,142,143,144,145,203,204,205,206,207,228,271,272,273,278,302,307,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,2,18,46,83,140,],[0,-1,-4,-2,-5,-3,]),'IDENTIFICADOR':([3,5,6,7,9,14,15,21,24,28,43,52,53,55,56,65,66,67,68,69,70,71,72,73,75,77,78,80,92,93,96,100,101,102,103,104,105,106,107,120,128,133,137,141,142,143,144,145,165,166,167,171,172,173,174,175,176,177,187,188,189,190,191,192,193,194,203,204,205,206,207,220,228,238,248,251,271,272,273,277,278,291,302,307,],[8,-8,-9,-10,11,20,40,49,54,40,40,20,20,98,40,40,40,40,40,40,40,40,118,118,124,129,130,138,20,20,98,40,40,40,40,40,40,40,40,40,181,130,40,20,20,20,20,20,118,118,118,216,-132,-133,-134,-135,-136,-137,130,-123,-124,-125,-126,-127,-128,-129,20,20,20,20,20,243,40,98,130,266,40,40,40,284,40,301,40,40,]),'FUNCION':([5,6,7,14,21,52,53,92,93,141,142,143,144,145,203,204,205,206,207,],[-8,-9,-10,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'PROCEDIMIENTO':([5,6,7,14,21,52,53,92,93,141,142,143,144,145,203,204,205,206,207,],[-8,-9,-10,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'ESCRIBIR':([5,6,7,15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[-8,-9,-10,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LEER':([5,6,7,15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[-8,-9,-10,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'MIENTRAS':([5,6,7,15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[-8,-9,-10,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'PARA':([5,6,7,15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[-8,-9,-10,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'SI':([5,6,7,15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[-8,-9,-10,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'SEGUN':([5,6,7,15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[-8,-9,-10,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'REPETIR':([5,6,7,15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[-8,-9,-10,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ES':([8,11,85,154,252,],[10,16,-41,209,267,]),'AMBIENTE':([10,16,209,267,],[14,14,14,14,]),'PROCESO':([10,12,14,16,19,44,52,53,92,93,94,95,141,142,143,144,145,151,152,198,199,200,201,202,203,204,205,206,207,209,230,231,232,233,234,236,267,274,],[15,15,-12,15,-11,15,-35,-39,-36,-40,-33,-37,-15,-21,-23,-27,-31,-34,-38,-13,-17,-19,-25,-29,-16,-22,-24,-28,-32,15,-14,-18,-20,-26,-30,15,15,15,]),'FIN_ACCION':([13,15,17,26,45,56,65,66,67,68,69,70,71,82,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,],[18,-7,46,-6,83,-48,-52,-56,-60,-64,-68,-72,-76,140,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,]),'FIN_FUNCION':([15,26,56,65,66,67,68,69,70,71,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,275,282,],[-7,-6,-48,-52,-56,-60,-64,-68,-72,-76,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,283,289,]),'FIN_PROCEDIMIENTO':([15,26,56,65,66,67,68,69,70,71,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,237,253,],[-7,-6,-48,-52,-56,-60,-64,-68,-72,-76,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,254,268,]),'DOS_PUNTOS':([20,49,98,208,264,265,266,295,],[47,90,155,235,271,272,273,302,]),'IGUAL':([20,49,124,125,126,127,181,182,183,184,229,286,287,288,],[48,91,172,172,172,172,172,172,172,172,251,251,251,251,]),'PUNTO_Y_COMA':([22,23,27,29,30,31,32,33,34,35,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,84,85,86,87,88,89,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,130,131,132,134,135,136,146,147,148,149,150,156,157,158,159,160,161,162,163,164,168,170,197,211,215,225,226,227,239,240,241,242,254,256,257,258,259,261,262,263,268,269,276,279,280,281,283,289,290,292,300,304,309,],[52,53,56,65,66,67,68,69,70,71,92,93,-48,100,101,102,103,104,105,106,107,-52,-56,-60,-64,-68,-72,-76,141,-41,142,143,144,145,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-103,-97,-98,-102,-104,-105,203,204,205,206,207,-47,-51,-55,-59,-63,-67,-71,-75,211,-79,-122,-96,-78,-80,-99,-101,-83,-114,-116,-118,-120,269,-115,-117,-119,-121,-100,-84,-85,276,-45,-44,286,287,288,290,300,-43,-82,-42,306,-81,]),'PARENTESIS_IZQUIERDA':([25,36,37,38,39,41,42,54,76,78,121,122,123,133,139,188,189,190,191,192,193,194,248,],[55,72,73,75,77,75,80,96,128,133,75,-130,-131,133,75,-123,-124,-125,-126,-127,-128,-129,133,]),'NEGACION':([38,41,121,122,123,139,],[76,76,76,-130,-131,76,]),'ASIGNACION':([40,129,284,],[78,185,291,]),'DATO':([47,48,90,91,155,235,],[85,87,85,148,85,85,]),'CADENA':([48,72,75,78,91,128,165,166,172,173,174,175,176,177,178,221,],[86,117,125,132,147,182,117,117,-132,-133,-134,-135,-136,-137,217,244,]),'NUMERO_ENTERO':([48,75,78,91,128,133,172,173,174,175,176,177,179,185,187,188,189,190,191,192,193,194,222,248,251,260,303,],[88,126,136,149,183,136,-132,-133,-134,-135,-136,-137,218,224,136,-123,-124,-125,-126,-127,-128,-129,245,136,264,270,305,]),'NUMERO_REAL':([48,75,78,91,128,133,172,173,174,175,176,177,180,187,188,189,190,191,192,193,194,223,248,251,],[89,127,135,150,184,135,-132,-133,-134,-135,-136,-137,219,135,-123,-124,-125,-126,-127,-128,-129,246,135,265,]),'FIN_MIENTRAS':([56,65,66,67,68,69,70,71,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,169,],[-48,-52,-56,-60,-64,-68,-72,-76,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,215,]),'FIN_PARA':([56,65,66,67,68,69,70,71,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,285,308,],[-48,-52,-56,-60,-64,-68,-72,-76,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,292,309,]),'FIN_SI':([56,65,66,67,68,69,70,71,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,195,249,],[-48,-52,-56,-60,-64,-68,-72,-76,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,227,262,]),'SINO':([56,65,66,67,68,69,70,71,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,195,],[-48,-52,-56,-60,-64,-68,-72,-76,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,228,]),'HASTA_QUE':([56,65,66,67,68,69,70,71,81,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,],[-48,-52,-56,-60,-64,-68,-72,-76,139,-46,-49,-53,-57,-61,-65,-69,-73,-77,-50,-54,-58,-62,-66,-70,-74,-47,-51,-55,-59,-63,-67,-71,-75,]),'HACER':([74,170,196,239,240,241,242,256,257,258,259,270,305,],[120,-122,229,-114,-116,-118,-120,-115,-117,-119,-121,278,307,]),'CONJUNCION':([74,79,170,197,239,240,241,242,256,257,258,259,],[122,122,122,122,-114,-116,-118,-120,-115,-117,-119,-121,]),'DISYUNCION':([74,79,170,197,239,240,241,242,256,257,258,259,],[123,123,123,123,-114,-116,-118,-120,-115,-117,-119,-121,]),'ENTONCES':([79,170,239,240,241,242,256,257,258,259,],[137,-122,-114,-116,-118,-120,-115,-117,-119,-121,]),'COMA':([85,116,117,118,210,214,270,],[-41,165,166,-113,238,-112,277,]),'PARENTESIS_DERECHA':([85,97,115,116,117,118,119,130,134,135,136,138,153,186,210,212,213,214,216,217,218,219,224,225,226,243,244,245,246,255,261,],[-41,154,164,-109,-111,-113,168,-103,-102,-104,-105,196,208,225,-107,-108,-110,-112,239,240,241,242,247,-99,-101,256,257,258,259,-106,-100,]),'MAYOR':([124,125,126,127,181,182,183,184,],[173,173,173,173,173,173,173,173,]),'MENOR':([124,125,126,127,181,182,183,184,],[174,174,174,174,174,174,174,174,]),'MAYOR_IGUAL':([124,125,126,127,181,182,183,184,],[175,175,175,175,175,175,175,175,]),'MENOR_IGUAL':([124,125,126,127,181,182,183,184,],[176,176,176,176,176,176,176,176,]),'DISTINTO':([124,125,126,127,181,182,183,184,],[177,177,177,177,177,177,177,177,]),'SUMA':([130,134,135,136,226,301,],[-103,188,-104,-105,188,303,]),'RESTA':([130,134,135,136,226,],[-103,189,-104,-105,189,]),'MULTIPLICACION':([130,134,135,136,226,],[-103,190,-104,-105,190,]),'DIVISION':([130,134,135,136,226,],[-103,191,-104,-105,191,]),'MODULO':([130,134,135,136,226,],[-103,192,-104,-105,192,]),'DIVISION_ENTERA':([130,134,135,136,226,],[-103,193,-104,-105,193,]),'POTENCIA':([130,134,135,136,226,],[-103,194,-104,-105,194,]),'HASTA':([247,],[260,]),'FIN_SEGUN':([250,286,287,288,293,294,296,297,298,299,306,],[263,-87,-90,-93,-86,-88,-89,-91,-92,-94,-95,]),'SEGUN_DEFECTO':([286,287,288,],[295,295,295,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sigma':([0,],[1,]),'program':([0,],[2,]),'comment':([0,14,15,43,52,53,56,65,66,67,68,69,70,71,92,93,100,101,102,103,104,105,106,107,120,137,141,142,143,144,145,203,204,205,206,207,228,271,272,273,278,302,307,],[4,21,28,28,21,21,28,28,28,28,28,28,28,28,21,21,28,28,28,28,28,28,28,28,28,28,21,21,21,21,21,21,21,21,21,21,28,28,28,28,28,28,28,]),'environment':([10,16,209,267,],[12,44,236,274,]),'process':([10,12,16,44,209,236,267,274,],[13,17,45,82,237,253,275,282,]),'environmentsentence':([14,52,53,92,93,141,142,143,144,145,203,204,205,206,207,],[19,94,95,151,152,198,199,200,201,202,230,231,232,233,234,]),'function':([14,21,52,53,92,93,141,142,143,144,145,203,204,205,206,207,],[22,50,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'procedure':([14,21,52,53,92,93,141,142,143,144,145,203,204,205,206,207,],[23,51,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'sentence':([15,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[26,81,99,108,109,110,111,112,113,114,156,157,158,159,160,161,162,163,169,195,249,279,280,281,285,304,308,]),'write':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[27,57,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'read':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[29,58,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'while':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[30,59,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'for':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[31,60,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'if':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[32,61,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'case':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[33,62,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'repeat':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[34,63,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'assign':([15,28,43,56,65,66,67,68,69,70,71,100,101,102,103,104,105,106,107,120,137,228,271,272,273,278,302,307,],[35,64,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'condition':([38,41,121,139,],[74,79,170,197,]),'type':([47,90,155,235,],[84,146,210,252,]),'arguments':([55,96,238,],[97,153,255,]),'string':([72,165,166,],[115,212,213,]),'var':([72,73,165,166,167,],[116,119,116,116,214,]),'lop':([74,79,170,197,],[121,121,121,121,]),'operation':([78,133,248,],[131,186,261,]),'operated':([78,133,187,248,],[134,134,226,134,]),'rop':([124,125,126,127,181,182,183,184,],[171,178,179,180,220,221,222,223,]),'aop':([134,226,],[187,248,]),'casesentence':([229,286,287,288,],[250,293,296,298,]),'default':([286,287,288,],[294,297,299,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sigma","S'",1,None,None,None),
  ('sigma -> program','sigma',1,'p_sigma','parser.py',31),
  ('program -> ACCION IDENTIFICADOR ES environment process FIN_ACCION','program',6,'p_program','parser.py',38),
  ('program -> comment ACCION IDENTIFICADOR ES environment process FIN_ACCION','program',7,'p_program','parser.py',39),
  ('program -> ACCION IDENTIFICADOR ES process FIN_ACCION','program',5,'p_program','parser.py',40),
  ('program -> comment ACCION IDENTIFICADOR ES process FIN_ACCION','program',6,'p_program','parser.py',41),
  ('process -> PROCESO sentence','process',2,'p_process','parser.py',47),
  ('process -> PROCESO','process',1,'p_process','parser.py',48),
  ('comment -> COMENTARIO_ENCABEZADO','comment',1,'p_comment','parser.py',54),
  ('comment -> COMENTARIO_BLOQUE','comment',1,'p_comment','parser.py',55),
  ('comment -> COMENTARIO_LINEA','comment',1,'p_comment','parser.py',56),
  ('environment -> AMBIENTE environmentsentence','environment',2,'p_environment','parser.py',62),
  ('environment -> AMBIENTE','environment',1,'p_environment','parser.py',63),
  ('environmentsentence -> IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA environmentsentence','environmentsentence',5,'p_environmentsentence','parser.py',70),
  ('environmentsentence -> comment IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA environmentsentence','environmentsentence',6,'p_environmentsentence','parser.py',71),
  ('environmentsentence -> IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA','environmentsentence',4,'p_environmentsentence','parser.py',72),
  ('environmentsentence -> comment IDENTIFICADOR DOS_PUNTOS type PUNTO_Y_COMA','environmentsentence',5,'p_environmentsentence','parser.py',73),
  ('environmentsentence -> IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA environmentsentence','environmentsentence',5,'p_environmentsentence','parser.py',74),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA environmentsentence','environmentsentence',6,'p_environmentsentence','parser.py',75),
  ('environmentsentence -> IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA environmentsentence','environmentsentence',5,'p_environmentsentence','parser.py',76),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA environmentsentence','environmentsentence',6,'p_environmentsentence','parser.py',77),
  ('environmentsentence -> IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA','environmentsentence',4,'p_environmentsentence','parser.py',78),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL CADENA PUNTO_Y_COMA','environmentsentence',5,'p_environmentsentence','parser.py',79),
  ('environmentsentence -> IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA','environmentsentence',4,'p_environmentsentence','parser.py',80),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL DATO PUNTO_Y_COMA','environmentsentence',5,'p_environmentsentence','parser.py',81),
  ('environmentsentence -> IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA environmentsentence','environmentsentence',5,'p_environmentsentence','parser.py',82),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA environmentsentence','environmentsentence',6,'p_environmentsentence','parser.py',83),
  ('environmentsentence -> IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA','environmentsentence',4,'p_environmentsentence','parser.py',84),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL NUMERO_ENTERO PUNTO_Y_COMA','environmentsentence',5,'p_environmentsentence','parser.py',85),
  ('environmentsentence -> IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA environmentsentence','environmentsentence',5,'p_environmentsentence','parser.py',86),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA environmentsentence','environmentsentence',6,'p_environmentsentence','parser.py',87),
  ('environmentsentence -> IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA','environmentsentence',4,'p_environmentsentence','parser.py',88),
  ('environmentsentence -> comment IDENTIFICADOR IGUAL NUMERO_REAL PUNTO_Y_COMA','environmentsentence',5,'p_environmentsentence','parser.py',89),
  ('environmentsentence -> function PUNTO_Y_COMA environmentsentence','environmentsentence',3,'p_environmentsentence','parser.py',90),
  ('environmentsentence -> comment function PUNTO_Y_COMA environmentsentence','environmentsentence',4,'p_environmentsentence','parser.py',91),
  ('environmentsentence -> function PUNTO_Y_COMA','environmentsentence',2,'p_environmentsentence','parser.py',92),
  ('environmentsentence -> comment function PUNTO_Y_COMA','environmentsentence',3,'p_environmentsentence','parser.py',93),
  ('environmentsentence -> procedure PUNTO_Y_COMA environmentsentence','environmentsentence',3,'p_environmentsentence','parser.py',94),
  ('environmentsentence -> comment procedure PUNTO_Y_COMA environmentsentence','environmentsentence',4,'p_environmentsentence','parser.py',95),
  ('environmentsentence -> procedure PUNTO_Y_COMA','environmentsentence',2,'p_environmentsentence','parser.py',96),
  ('environmentsentence -> comment procedure PUNTO_Y_COMA','environmentsentence',3,'p_environmentsentence','parser.py',97),
  ('type -> DATO','type',1,'p_type','parser.py',104),
  ('function -> FUNCION IDENTIFICADOR PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA DOS_PUNTOS type ES environment process FIN_FUNCION PUNTO_Y_COMA','function',12,'p_function','parser.py',110),
  ('function -> FUNCION IDENTIFICADOR PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA DOS_PUNTOS type ES process FIN_FUNCION PUNTO_Y_COMA','function',11,'p_function','parser.py',111),
  ('procedure -> PROCEDIMIENTO PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA ES environment process FIN_PROCEDIMIENTO PUNTO_Y_COMA','procedure',9,'p_procedure','parser.py',118),
  ('procedure -> PROCEDIMIENTO PARENTESIS_IZQUIERDA arguments PARENTESIS_DERECHA ES process FIN_PROCEDIMIENTO PUNTO_Y_COMA','procedure',8,'p_procedure','parser.py',119),
  ('sentence -> write PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',126),
  ('sentence -> comment write PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',127),
  ('sentence -> write PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',128),
  ('sentence -> comment write PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',129),
  ('sentence -> read PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',130),
  ('sentence -> comment read PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',131),
  ('sentence -> read PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',132),
  ('sentence -> comment read PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',133),
  ('sentence -> while PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',134),
  ('sentence -> comment while PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',135),
  ('sentence -> while PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',136),
  ('sentence -> comment while PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',137),
  ('sentence -> for PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',138),
  ('sentence -> comment for PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',139),
  ('sentence -> for PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',140),
  ('sentence -> comment for PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',141),
  ('sentence -> if PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',142),
  ('sentence -> comment if PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',143),
  ('sentence -> if PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',144),
  ('sentence -> comment if PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',145),
  ('sentence -> case PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',146),
  ('sentence -> comment case PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',147),
  ('sentence -> case PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',148),
  ('sentence -> comment case PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',149),
  ('sentence -> repeat PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',150),
  ('sentence -> comment repeat PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',151),
  ('sentence -> repeat PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',152),
  ('sentence -> comment repeat PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',153),
  ('sentence -> assign PUNTO_Y_COMA sentence','sentence',3,'p_sentence','parser.py',154),
  ('sentence -> comment assign PUNTO_Y_COMA sentence','sentence',4,'p_sentence','parser.py',155),
  ('sentence -> assign PUNTO_Y_COMA','sentence',2,'p_sentence','parser.py',156),
  ('sentence -> comment assign PUNTO_Y_COMA','sentence',3,'p_sentence','parser.py',157),
  ('write -> ESCRIBIR PARENTESIS_IZQUIERDA string PARENTESIS_DERECHA PUNTO_Y_COMA','write',5,'p_write','parser.py',164),
  ('read -> LEER PARENTESIS_IZQUIERDA var PARENTESIS_DERECHA','read',4,'p_read','parser.py',171),
  ('while -> MIENTRAS condition HACER sentence FIN_MIENTRAS','while',5,'p_while','parser.py',178),
  ('for -> PARA PARENTESIS_IZQUIERDA IDENTIFICADOR ASIGNACION NUMERO_ENTERO PARENTESIS_DERECHA HASTA NUMERO_ENTERO COMA IDENTIFICADOR ASIGNACION IDENTIFICADOR SUMA NUMERO_ENTERO HACER sentence FIN_PARA','for',17,'p_for','parser.py',185),
  ('for -> PARA PARENTESIS_IZQUIERDA IDENTIFICADOR ASIGNACION NUMERO_ENTERO PARENTESIS_DERECHA HASTA NUMERO_ENTERO HACER sentence FIN_PARA','for',11,'p_for','parser.py',186),
  ('if -> SI condition ENTONCES sentence FIN_SI','if',5,'p_if','parser.py',192),
  ('if -> SI condition ENTONCES sentence SINO sentence FIN_SI','if',7,'p_if','parser.py',193),
  ('case -> SEGUN PARENTESIS_IZQUIERDA IDENTIFICADOR PARENTESIS_DERECHA HACER casesentence FIN_SEGUN','case',7,'p_case','parser.py',199),
  ('casesentence -> IGUAL NUMERO_ENTERO DOS_PUNTOS sentence PUNTO_Y_COMA casesentence','casesentence',6,'p_casesentence','parser.py',205),
  ('casesentence -> IGUAL NUMERO_ENTERO DOS_PUNTOS sentence PUNTO_Y_COMA','casesentence',5,'p_casesentence','parser.py',206),
  ('casesentence -> IGUAL NUMERO_ENTERO DOS_PUNTOS sentence PUNTO_Y_COMA default','casesentence',6,'p_casesentence','parser.py',207),
  ('casesentence -> IGUAL NUMERO_REAL DOS_PUNTOS sentence PUNTO_Y_COMA casesentence','casesentence',6,'p_casesentence','parser.py',208),
  ('casesentence -> IGUAL NUMERO_REAL DOS_PUNTOS sentence PUNTO_Y_COMA','casesentence',5,'p_casesentence','parser.py',209),
  ('casesentence -> IGUAL NUMERO_REAL DOS_PUNTOS sentence PUNTO_Y_COMA default','casesentence',6,'p_casesentence','parser.py',210),
  ('casesentence -> IGUAL IDENTIFICADOR DOS_PUNTOS sentence PUNTO_Y_COMA casesentence','casesentence',6,'p_casesentence','parser.py',211),
  ('casesentence -> IGUAL IDENTIFICADOR DOS_PUNTOS sentence PUNTO_Y_COMA','casesentence',5,'p_casesentence','parser.py',212),
  ('casesentence -> IGUAL IDENTIFICADOR DOS_PUNTOS sentence PUNTO_Y_COMA default','casesentence',6,'p_casesentence','parser.py',213),
  ('default -> SEGUN_DEFECTO DOS_PUNTOS sentence PUNTO_Y_COMA','default',4,'p_default','parser.py',219),
  ('repeat -> REPETIR sentence HASTA_QUE condition','repeat',4,'p_repeat','parser.py',225),
  ('assign -> IDENTIFICADOR ASIGNACION operation','assign',3,'p_assign','parser.py',231),
  ('assign -> IDENTIFICADOR ASIGNACION CADENA','assign',3,'p_assign','parser.py',232),
  ('operation -> PARENTESIS_IZQUIERDA operation PARENTESIS_DERECHA','operation',3,'p_operation','parser.py',238),
  ('operation -> operated aop operated aop operation','operation',5,'p_operation','parser.py',239),
  ('operation -> operated aop operated','operation',3,'p_operation','parser.py',240),
  ('operation -> operated','operation',1,'p_operation','parser.py',241),
  ('operated -> IDENTIFICADOR','operated',1,'p_operated','parser.py',247),
  ('operated -> NUMERO_REAL','operated',1,'p_operated','parser.py',248),
  ('operated -> NUMERO_ENTERO','operated',1,'p_operated','parser.py',249),
  ('arguments -> IDENTIFICADOR DOS_PUNTOS type COMA arguments','arguments',5,'p_arguments','parser.py',255),
  ('arguments -> IDENTIFICADOR DOS_PUNTOS type','arguments',3,'p_arguments','parser.py',256),
  ('string -> var COMA string','string',3,'p_string','parser.py',262),
  ('string -> var','string',1,'p_string','parser.py',263),
  ('string -> CADENA COMA string','string',3,'p_string','parser.py',264),
  ('string -> CADENA','string',1,'p_string','parser.py',265),
  ('var -> IDENTIFICADOR COMA var','var',3,'p_var','parser.py',271),
  ('var -> IDENTIFICADOR','var',1,'p_var','parser.py',272),
  ('condition -> PARENTESIS_IZQUIERDA IDENTIFICADOR rop IDENTIFICADOR PARENTESIS_DERECHA','condition',5,'p_condition','parser.py',278),
  ('condition -> NEGACION PARENTESIS_IZQUIERDA IDENTIFICADOR rop IDENTIFICADOR PARENTESIS_DERECHA','condition',6,'p_condition','parser.py',279),
  ('condition -> PARENTESIS_IZQUIERDA CADENA rop CADENA PARENTESIS_DERECHA','condition',5,'p_condition','parser.py',280),
  ('condition -> NEGACION PARENTESIS_IZQUIERDA CADENA rop CADENA PARENTESIS_DERECHA','condition',6,'p_condition','parser.py',281),
  ('condition -> PARENTESIS_IZQUIERDA NUMERO_ENTERO rop NUMERO_ENTERO PARENTESIS_DERECHA','condition',5,'p_condition','parser.py',282),
  ('condition -> NEGACION PARENTESIS_IZQUIERDA NUMERO_ENTERO rop NUMERO_ENTERO PARENTESIS_DERECHA','condition',6,'p_condition','parser.py',283),
  ('condition -> PARENTESIS_IZQUIERDA NUMERO_REAL rop NUMERO_REAL PARENTESIS_DERECHA','condition',5,'p_condition','parser.py',284),
  ('condition -> NEGACION PARENTESIS_IZQUIERDA NUMERO_REAL rop NUMERO_REAL PARENTESIS_DERECHA','condition',6,'p_condition','parser.py',285),
  ('condition -> condition lop condition','condition',3,'p_condition','parser.py',286),
  ('aop -> SUMA','aop',1,'p_aop','parser.py',292),
  ('aop -> RESTA','aop',1,'p_aop','parser.py',293),
  ('aop -> MULTIPLICACION','aop',1,'p_aop','parser.py',294),
  ('aop -> DIVISION','aop',1,'p_aop','parser.py',295),
  ('aop -> MODULO','aop',1,'p_aop','parser.py',296),
  ('aop -> DIVISION_ENTERA','aop',1,'p_aop','parser.py',297),
  ('aop -> POTENCIA','aop',1,'p_aop','parser.py',298),
  ('lop -> CONJUNCION','lop',1,'p_lop','parser.py',304),
  ('lop -> DISYUNCION','lop',1,'p_lop','parser.py',305),
  ('rop -> IGUAL','rop',1,'p_rop','parser.py',311),
  ('rop -> MAYOR','rop',1,'p_rop','parser.py',312),
  ('rop -> MENOR','rop',1,'p_rop','parser.py',313),
  ('rop -> MAYOR_IGUAL','rop',1,'p_rop','parser.py',314),
  ('rop -> MENOR_IGUAL','rop',1,'p_rop','parser.py',315),
  ('rop -> DISTINTO','rop',1,'p_rop','parser.py',316),
]
